//
// MIT License
//
// Copyright 2018
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//
#pragma once

#include "addressing_mode.hh"
#include "opcode.hh"

namespace jones {
  
  using op = opcode_t;
  using am = addressing_mode_t;
  using mnemonic_t = const char*;
  
  struct instruction_t {
    uint8_t opcode;
    opcode_t type;
    mnemonic_t mnemonic;
    addressing_mode_t addressingMode;
  };
  
  //
  // Reference: https://wiki.nesdev.com/w/index.php/CPU_unofficial_opcodes
  //
  struct instruction_t instruction_set[256] {

    { 0x00, op::BRK, "BRK", am::IMPLICIT         },
    { 0x01, op::ORA, "ORA", am::INDEXED_INDIRECT },
    { 0x02, op::STP, "STP", am::IMPLICIT         },
    { 0x03, op::SLO, "SLO", am::INDEXED_INDIRECT },
    { 0x04, op::NOP, "NOP", am::ZERO_PAGE        },
    { 0x05, op::ORA, "ORA", am::ZERO_PAGE        },
    { 0x06, op::ASL, "ASL", am::ZERO_PAGE        },
    { 0x07, op::SLO, "SLO", am::ZERO_PAGE        },
    { 0x08, op::PHP, "PHP", am::IMPLICIT         },
    { 0x09, op::ORA, "ORA", am::IMMEDIATE        },
    { 0x0A, op::ASL, "ASL", am::IMPLICIT         },
    { 0x0B, op::ANC, "ANC", am::IMMEDIATE        },
    { 0x0C, op::NOP, "NOP", am::ABSOLUTE         },
    { 0x0D, op::ORA, "ORA", am::ABSOLUTE         },
    { 0x0E, op::ASL, "ASL", am::ABSOLUTE         },
    { 0x0F, op::SLO, "SLO", am::ABSOLUTE         },

    { 0x10, op::BPL, "BPL", am::RELATIVE         },
    { 0x11, op::ORA, "ORA", am::INDIRECT_INDEXED },
    { 0x12, op::STP, "STP", am::IMPLICIT         },
    { 0x13, op::SLO, "SLO", am::INDIRECT_INDEXED },
    { 0x14, op::NOP, "NOP", am::ZERO_PAGE_X      },
    { 0x15, op::ORA, "ORA", am::ZERO_PAGE_X      },
    { 0x16, op::ASL, "ASL", am::ZERO_PAGE_X      },
    { 0x17, op::SLO, "SLO", am::ZERO_PAGE_X      },	      
    { 0x18, op::CLC, "CLC", am::IMPLICIT         },
    { 0x19, op::ORA, "ORA", am::ABSOLUTE_Y       },
    { 0x1A, op::NOP, "NOP", am::IMPLICIT         },
    { 0x1B, op::SLO, "SLO", am::ABSOLUTE_Y       },
    { 0x1C, op::NOP, "NOP", am::ABSOLUTE_X       },
    { 0x1D, op::ORA, "ORA", am::ABSOLUTE_X       },
    { 0x1E, op::ASL, "ASL", am::ABSOLUTE_X       },
    { 0x1F, op::SLO, "SLO", am::ABSOLUTE_X       },

    { 0x20, op::JSR, "JSR", am::ABSOLUTE         },
    { 0x21, op::AND, "AND", am::INDEXED_INDIRECT },
    { 0x22, op::STP, "STP", am::IMPLICIT         },
    { 0x23, op::RLA, "RLA", am::INDEXED_INDIRECT },
    { 0x24, op::BIT, "BIT", am::ZERO_PAGE        },
    { 0x25, op::AND, "AND", am::ZERO_PAGE        },
    { 0x26, op::ROL, "ROL", am::ZERO_PAGE        },
    { 0x27, op::RLA, "RLA", am::ZERO_PAGE        },
    { 0x28, op::PLP, "PLP", am::IMPLICIT         },
    { 0x29, op::AND, "AND", am::IMMEDIATE        },
    { 0x2A, op::ROL, "ROL", am::IMPLICIT         },
    { 0x2B, op::ANC, "ANC", am::IMMEDIATE        },
    { 0x2C, op::BIT, "BIT", am::ABSOLUTE         },
    { 0x2D, op::AND, "AND", am::ABSOLUTE         },
    { 0x2E, op::ROL, "ROL", am::ABSOLUTE         },
    { 0x2F, op::RLA, "RLA", am::ABSOLUTE         },

    { 0x30, op::BMI, "BMI", am::RELATIVE         },
    { 0x31, op::AND, "AND", am::INDIRECT_INDEXED },
    { 0x32, op::STP, "STP", am::IMPLICIT         },
    { 0x33, op::RLA, "RLA", am::INDIRECT_INDEXED },
    { 0x34, op::NOP, "NOP", am::ZERO_PAGE_X      },
    { 0x35, op::AND, "AND", am::ZERO_PAGE_X      },
    { 0x36, op::ROL, "ROL", am::ZERO_PAGE_X      },
    { 0x37, op::RLA, "RLA", am::ZERO_PAGE_X      },
    { 0x38, op::SEC, "SEC", am::IMPLICIT         },
    { 0x39, op::AND, "AND", am::ABSOLUTE_Y       },
    { 0x3A, op::NOP, "NOP", am::IMPLICIT         },
    { 0x3B, op::RLA, "RLA", am::ABSOLUTE_Y       },
    { 0x3C, op::NOP, "NOP", am::ABSOLUTE_X       },
    { 0x3D, op::AND, "AND", am::ABSOLUTE_X       },
    { 0x3E, op::ROL, "ROL", am::ABSOLUTE_X       },
    { 0x3F, op::RLA, "RLA", am::ABSOLUTE_X       },

    { 0x40, op::RTI, "RTI", am::IMPLICIT         },
    { 0x41, op::EOR, "EOR", am::INDEXED_INDIRECT },
    { 0x42, op::STP, "STP", am::IMPLICIT         },
    { 0x43, op::SRE, "SRE", am::INDEXED_INDIRECT },
    { 0x44, op::NOP, "NOP", am::ZERO_PAGE        },
    { 0x45, op::EOR, "EOR", am::ZERO_PAGE        },
    { 0x46, op::LSR, "LSR", am::ZERO_PAGE        },
    { 0x47, op::SRE, "SRE", am::ZERO_PAGE        },
    { 0x48, op::PHA, "PHA", am::IMPLICIT         },
    { 0x49, op::EOR, "EOR", am::IMMEDIATE        },
    { 0x4A, op::LSR, "LSR", am::IMPLICIT         },
    { 0x4B, op::ALR, "ALR", am::IMMEDIATE        },
    { 0x4C, op::JMP, "JMP", am::ABSOLUTE         },
    { 0x4D, op::EOR, "EOR", am::ABSOLUTE         },
    { 0x4E, op::LSR, "LSR", am::ABSOLUTE         },
    { 0x4F, op::SRE, "SRE", am::ABSOLUTE         },

    { 0x50, op::BVC, "BVC", am::RELATIVE         },
    { 0x51, op::EOR, "EOR", am::INDIRECT_INDEXED },
    { 0x52, op::STP, "STP", am::IMPLICIT         },
    { 0x53, op::SRE, "SRE", am::INDIRECT_INDEXED },
    { 0x54, op::NOP, "NOP", am::ZERO_PAGE_X      },
    { 0x55, op::EOR, "EOR", am::ZERO_PAGE_X      },
    { 0x56, op::LSR, "LSR", am::ZERO_PAGE_X      },
    { 0x57, op::SRE, "SRE", am::ZERO_PAGE_X      },
    { 0x58, op::CLI, "CLI", am::IMPLICIT         },
    { 0x59, op::EOR, "EOR", am::ABSOLUTE_Y       },
    { 0x5A, op::NOP, "NOP", am::IMPLICIT         },
    { 0x5B, op::SRE, "SRE", am::ABSOLUTE_Y       },
    { 0x5C, op::NOP, "NOP", am::ABSOLUTE_X       },
    { 0x5D, op::EOR, "EOR", am::ABSOLUTE_X       },
    { 0x5E, op::LSR, "LSR", am::ABSOLUTE_X       },
    { 0x5F, op::SRE, "SRE", am::ABSOLUTE_X       },

    { 0x60, op::RTS, "RTS" },
    { 0x61, op::ADC, "ADC" },
    { 0x62, op::STP, "STP" },
    { 0x63, op::RRA, "RRA" },
    { 0x64, op::NOP, "NOP" },
    { 0x65, op::ADC, "ADC" },
    { 0x66, op::ROR, "ROR" },
    { 0x67, op::RRA, "RRA" },	      
    { 0x68, op::PLA, "PLA" },
    { 0x69, op::ADC, "ADC" },
    { 0x6A, op::ROR, "ROR" },
    { 0x6B, op::ARR, "ARR" },
    { 0x6C, op::JMP, "JMP" },
    { 0x6D, op::ADC, "ADC" },
    { 0x6E, op::ROR, "ROR" },
    { 0x6F, op::RRA, "RRA" },

    { 0x70, op::BVS, "BVS" },
    { 0x71, op::ADC, "ADC" },
    { 0x72, op::STP, "STP" },
    { 0x73, op::RRA, "RRA" },
    { 0x74, op::NOP, "NOP" },
    { 0x75, op::ADC, "ADC" },
    { 0x76, op::ROR, "ROR" },
    { 0x77, op::RRA, "RRA" },	      
    { 0x78, op::SEI, "SEI" },
    { 0x79, op::ADC, "ADC" },
    { 0x7A, op::NOP, "NOP" },
    { 0x7B, op::RRA, "RRA" },
    { 0x7C, op::NOP, "NOP" },
    { 0x7D, op::ADC, "ADC" },
    { 0x7E, op::ROR, "ROR" },
    { 0x7F, op::RRA, "RRA" },

    { 0x80, op::NOP, "NOP" },
    { 0x81, op::STA, "STA" },
    { 0x82, op::NOP, "NOP" },
    { 0x83, op::SAX, "SAX" },
    { 0x84, op::STY, "STY" },
    { 0x85, op::STA, "STA" },
    { 0x86, op::STX, "STX" },
    { 0x87, op::SAX, "SAX" },	      
    { 0x88, op::DEY, "DEY" },
    { 0x89, op::NOP, "NOP", am::IMMEDIATE },
    { 0x8A, op::TXA, "TXA", am::IMPLICIT },
    { 0x8B, op::XAA, "XAA", am::IMMEDIATE },
    { 0x8C, op::STY, "STY", am::ABSOLUTE },
    { 0x8D, op::STA, "STA", am::ABSOLUTE },
    { 0x8E, op::STX, "STX", am::ABSOLUTE },
    { 0x8F, op::SAX, "SAX", am::ABSOLUTE },

    { 0x90, op::BCC, "BCC" },
    { 0x91, op::STA, "STA" },
    { 0x92, op::STP, "STP" },
    { 0x93, op::AHX, "AHX" },
    { 0x94, op::STY, "STY" },
    { 0x95, op::STA, "STA" },
    { 0x96, op::STX, "STX" },
    { 0x97, op::SAX, "SAX" },	      
    { 0x98, op::TYA, "TYA" },
    { 0x99, op::STA, "STA" },
    { 0x9A, op::TXS, "TXS" },
    { 0x9B, op::TAS, "TAS" },
    { 0x9C, op::SHY, "SHY" },
    { 0x9D, op::STA, "STA" },
    { 0x9E, op::SHX, "SHX" },
    { 0x9F, op::AHX, "AHX" },

    { 0xA0, op::LDY, "LDY" },
    { 0xA1, op::LDA, "LDA" },
    { 0xA2, op::LDX, "LDX" },
    { 0xA3, op::LAX, "LAX" },
    { 0xA4, op::LDY, "LDY" },
    { 0xA5, op::LDA, "LDA" },
    { 0xA6, op::LDX, "LDX" },
    { 0xA7, op::LAX, "LAX" },	      
    { 0xA8, op::TAY, "TAY" },
    { 0xA9, op::LDA, "LDA" },
    { 0xAA, op::TAX, "TAX" },
    { 0xAB, op::LAX, "LAX" },
    { 0xAC, op::LDY, "LDY" },
    { 0xAD, op::LDA, "LDA" },
    { 0xAE, op::LDX, "LDX" },
    { 0xAF, op::LAX, "LAX" },

    { 0xB0, op::BCS, "BCS" },
    { 0xB1, op::LDA, "LDA" },
    { 0xB2, op::STP, "STP" },
    { 0xB3, op::LAX, "LAX" },
    { 0xB4, op::LDY, "LDY" },
    { 0xB5, op::LDA, "LDA" },
    { 0xB6, op::LDX, "LDX" },
    { 0xB7, op::LAX, "LAX" },	      
    { 0xB8, op::CLV, "CLV" },
    { 0xB9, op::LDA, "LDA" },
    { 0xBA, op::TSX, "TSX" },
    { 0xBB, op::LAS, "LAS" },
    { 0xBC, op::LDY, "LDY" },
    { 0xBD, op::LDA, "LDA" },
    { 0xBE, op::LDX, "LDX" },
    { 0xBF, op::LAX, "LAX" },

    { 0xC0, op::CPY, "CPY" },
    { 0xC1, op::CMP, "CMP" },
    { 0xC2, op::NOP, "NOP" },
    { 0xC3, op::DCP, "DCP" },
    { 0xC4, op::CPY, "CPY" },
    { 0xC5, op::CMP, "CMP" },
    { 0xC6, op::DEC, "DEC" },
    { 0xC7, op::DCP, "DCP" },	      
    { 0xC8, op::INY, "INY" },
    { 0xC9, op::CMP, "CMP" },
    { 0xCA, op::DEX, "DEX" },
    { 0xCB, op::AXS, "AXS" },
    { 0xCC, op::CPY, "CPY" },
    { 0xCD, op::CMP, "CMP" },
    { 0xCE, op::DEC, "DEC" },
    { 0xCF, op::DCP, "DCP" },

    { 0xD0, op::BNE, "BNE" },
    { 0xD1, op::CMP, "CMP" },
    { 0xD2, op::STP, "STP" },
    { 0xD3, op::DCP, "DCP" },
    { 0xD4, op::NOP, "NOP" },
    { 0xD5, op::CMP, "CMP" },
    { 0xD6, op::DEC, "DEC" },
    { 0xD7, op::DCP, "DCP" },	      
    { 0xD8, op::CLD, "CLD" },
    { 0xD9, op::CMP, "CMP" },
    { 0xDA, op::NOP, "NOP" },
    { 0xDB, op::DCP, "DCP" },
    { 0xDC, op::NOP, "NOP" },
    { 0xDD, op::CMP, "CMP" },
    { 0xDE, op::DEC, "DEC" },
    { 0xDF, op::DCP, "DCP" },

    { 0xE0, op::CPX, "CPX" },
    { 0xE1, op::SBC, "SBC" },
    { 0xE2, op::NOP, "NOP" },
    { 0xE3, op::ISC, "ISC" },
    { 0xE4, op::CPX, "CPX" },
    { 0xE5, op::SBC, "SBC" },
    { 0xE6, op::INC, "INC" },
    { 0xE7, op::ISC, "ISC" },	      
    { 0xE8, op::INX, "INX" },
    { 0xE9, op::SBC, "SBC" },
    { 0xEA, op::NOP, "NOP" },
    { 0xEB, op::SBC, "SBC" },
    { 0xEC, op::CPX, "CPX" },
    { 0xED, op::SBC, "SBC" },
    { 0xEE, op::INC, "INC" },
    { 0xEF, op::ISC, "ISC" },

    { 0xF0, op::BEQ, "BEQ" },
    { 0xF1, op::SBC, "SBC" },
    { 0xF2, op::STP, "STP" },
    { 0xF3, op::ISC, "ISC" },
    { 0xF4, op::NOP, "NOP" },
    { 0xF5, op::SBC, "SBC" },
    { 0xF6, op::INC, "INC" },
    { 0xF7, op::ISC, "ISC" },	      
    { 0xF8, op::SED, "SED" },
    { 0xF9, op::SBC, "SBC" },
    { 0xFA, op::NOP, "NOP" },
    { 0xFB, op::ISC, "ISC" },
    { 0xFC, op::NOP, "NOP" },
    { 0xFD, op::SBC, "SBC" },
    { 0xFE, op::INC, "INC" },
    { 0xFF, op::ISC, "ISC" }
  };
}
